@startuml

'hide the spot
hide circle

'avoid problems with angled crows feet
'skinparam linetype ortho
'skinparam linetype polyline

skinparam {
    ArrowColor #444
    ArrowFontColor #gray
    ClassBorderColor #827c7e
    ClassStereotypeFontStyle normal
    ClassStereotypeFontColor #fff
    ClassHeaderBackgroundColor #ca9be0
    ClassFontName Helvetica
    ClassBackgroundColor #d9ead3
}


class BurgerPos {
    ==state==
        errorMsg: string
        showUnknownModal: boolean
        inProgressPayment: boolean
        suppressMerchantPassword: boolean
        openPricing: boolean
        pairingState: object
        statusState: SpiStatus
}

class Products {
    ==state==
        shortListedProducts: array
        checkout: boolean
        transactionAction: string
        surchargeAmount: number
        transactionStatus: boolean
    ==props==
        spi: object
        status: any
        showUnknownModal: boolean
        setShowUnknownModal: function
        suppressMerchantPassword: boolean
        errorMsg: string
        onErrorMsg: Function
        openPricing: boolean
        setOpenPricing: boolean
}

class ProductList {
    ==props==
        category: list
        onProductClick: function
        allProduct: array
        shortListedProducts: array
        updatedShortlistedProducts: function
}

class Order {
    ==state==
        showSurcharge: boolean
        surcharge:  number
    ==props==
        list: array
        onChangeProductQuantity:
        onRefund: function
        onLastTransaction: function
        onCheckout: function
        handleApplySurcharge: function
        surchargeAmount: number
        setSurchargeAmount: function
        status: any
        errorMsg: string
        onErrorMsg: function
}

class SurchargeModal {
    ==props==
        show: boolean
        surcharge: number
        setSurcharge: function
}

class Checkout {
    ==state==
        totalPaid: number
        promptCashout: boolean
        showSigApproval: boolean
        finalTotal: number
        finalSurcharge: number
        finalCashout: number
        finalTipAmount: number
        purchaseAmount: number
    ==props==
        visible: boolean
        list:
        onClose: function
        onNoThanks: function
        spi: object
        surchargeAmount: number
        setSurchargeAmount: function
        setTransactionStatus: function
        transactionStatus: boolean
        transactionAction: string
        showUnknownModal: boolean
        setShowUnknownModal: function
        handleOverrideTransaction: function
        suppressMerchantPassword: boolean
        openPricing: boolean
        setOpenPricing: function
}

class SigApproval {
    ==props==
        show: boolean
        setShowSigApproval: function
        spi: object
}
class RefundPay {
    ==state==
        refundAmount: number
    ==props==
        handleRefundPay: function
}
class OrderPay {
    ==state==
        paymentType: PaymentType
    ==props==
        handleCreditCardPay: function
        handleMotoPay: function
        totalAmount: number
        promptCashout: boolean
        setPromptCashout: function
        openPricing: boolean
        setOpenPricing: function
        transactionStatus: boolean
}
class CreditCard {
    ==state==
        tipAmount: number
        cashoutAmount: numeber
        manualAmount: number
}
class Moto {

}

class CashOutPay {
    ==state==
        cashoutAmount: number
    ==props==
        handleCashoutPay: function
}

class Pairing {
    ==props==
        confirmationCode: string
        isAwaitingConfirmation: boolean
        isFinishedPairing:boolean
        status: any
        spi: object
        message: string
        setPairingState: function
}
class Status {
    ==props==
        status: any
        isFinishedPairing: boolean
        spi: object
        Message: string

}
class PairingConfig {
    ==state==
        posId: string
        serial: string
        eftpos: string
        apiKey: string
        testMode: boolean
        autoAddress: boolean
        secureWebSocket: boolean
        errorMsg: string
    ==props==
        spi: object
        status: string

}
class Flow {
    ==props==
        ref: element
}

class Settings {
    ==state==
        posSetting: object
        actionType:
        model: string
    ==props==
        spi: object
        status: any
        errorMsg: string
        onErrorMsg: Function
        suppressMerchantPassword: boolean
        setSuppressMerchantPassword: function
}
class SettingConfig {
    ==state==
        sigFlow: boolean
        eftposReceipt: boolean
        printMerchantCopy: boolean
        receiptHeader: string
        receiptFooter: string
    ==props==
        spi: object
        suppressMerchantPassword: boolean
        setSuppressMerchantPassword: function
 }

 class Actions {
    ==props==
        spi: object
        setActionType:
        flowEl: element
        receiptEl: element
        getTerminalStatus: any
        status: any
        errorMsg: string
        onErrorMsg: function
 }

class Flow {
    ==props==
        ref: element
 }

' component MyCustomFunction {

' }




BurgerPos --> Products
BurgerPos --> Pairing
BurgerPos --> Settings

Products --> ProductList
Products --> Order
Products --> Checkoutnew

Order --> SurchargeModal

Checkout --> SigApproval
Checkout --> CashOutPay
Checkout --> RefundPay
Checkout --> OrderPay

OrderPay --> CreditCard
OrderPay --> Moto


Pairing --> PairingConfig
Pairing --> Status
Pairing --> Flow

Settings --> SettingConfig
Settings --> Actions
Settings --> Flow


' Pairing -right-> MyCustomFunction


' e01 ||..o{ e02
' e01 |o..o{ e03

@enduml
